name: Build
on: [push, pull_request]
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          docker pull openturns/archlinux-module
          docker run --rm -v `pwd`:/io openturns/archlinux-module /io/.ci_support/run_docker_linux.sh `id -u` `id -g`
      - name: Upload
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          git clone --depth 1 https://${{ secrets.GH_TOKEN }}@github.com/openturns/openturns.github.io.git /tmp/io
          mkdir -p /tmp/io/otfmi/master
          cp -r html/* /tmp/io/otfmi/master
          cd /tmp/io
          touch .nojekyll
          git config user.email "support@gh.com"
          git config user.name "GitHub Actions"
          git add -A .
          if test `git diff HEAD | wc -c` -eq 0; then exit 0; fi
          git commit -a -m "GitHub Actions build ${GITHUB_REPOSITORY} ${GITHUB_RUN_ID}"
          git push --quiet origin master > /dev/null 2>&1

  conda-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
      - name: Build
        shell: bash -l {0}
        run: |
          conda install -y pyfmi openturns pytest jinja2 omcompiler
          python setup.py install
          mo2fmu -h
          mo2fmu ./otfmi/example/file/deviation.mo ./otfmi/example/file/fmu/linux64/deviation.fmu
          pytest test -s

  conda-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
      - name: Build
        run: |
          choco install openmodelica --version=1.21.0 --ignore-checksums
          $env:PATH += ";C:\Program Files\OpenModelica1.21.0-64bit\bin"
          omc --version
          conda install -y pyfmi openturns pytest jinja2
          python setup.py install
          mo2fmu -h
          pytest test -s

