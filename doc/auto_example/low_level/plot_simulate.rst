
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_example/low_level/plot_simulate.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_example_low_level_plot_simulate.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_example_low_level_plot_simulate.py:


Simulate an FMU
===============

.. GENERATED FROM PYTHON SOURCE LINES 13-15

The Otfmi ``simulate`` function instanciates, initializes and simulates the
FMU.

.. GENERATED FROM PYTHON SOURCE LINES 17-19

First, retrieve and load the FMU *deviation.fmu*.


.. GENERATED FROM PYTHON SOURCE LINES 19-23

.. code-block:: default

    import otfmi.example.utility
    path_fmu = otfmi.example.utility.get_path_fmu("deviation")
    model = otfmi.fmi.load_fmu(path_fmu)








.. GENERATED FROM PYTHON SOURCE LINES 24-28

.. note::
  | *model* is a PyFMI object, loaded with Otfmi’s overlay.
  | As such, ``model.simulate()`` is a pure PyFMI method.
  | Use ``òtfmi.fmi.simulate(model)`` to benefit from Otfmi’s overlay.

.. GENERATED FROM PYTHON SOURCE LINES 31-33

Otfmi ``simulate`` function notably eases initializing a FMU, see
:ref:`sphx_glr_auto_example_low_level_plot_initialize.py`.

.. GENERATED FROM PYTHON SOURCE LINES 35-37

On top of the initialization keywords, PyFMI simulation keywords can be
employed:

.. GENERATED FROM PYTHON SOURCE LINES 37-43

.. code-block:: default

    result = otfmi.fmi.simulate(model,
        start_time=0,  # PyFMI keyword
        final_time=1,  # PyFMI keyword
        initialization_parameters=(["L"], [300]))  # Otfmi keyword
    print("y = %g" % result.final("y"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Simulation interval    : 0 - 1.0 seconds.
    Elapsed simulation time: 0.01256897999883222 seconds.
    y = 22.5




.. GENERATED FROM PYTHON SOURCE LINES 44-46

We can use these keyword to plot the deviation Y as function of the beam
length L:

.. GENERATED FROM PYTHON SOURCE LINES 46-62

.. code-block:: default


    import openturns as ot
    inputSample = ot.RegularGrid(1.0, 10.0, 10).getValues()

    list_output = []
    for length in inputSample:
        result = otfmi.fmi.simulate(model,
            initialization_parameters=(["L"], [length]))
        list_output.append(result.final("y"))
    outputSample = ot.Sample([[xx] for xx in list_output])

    import matplotlib.pyplot as plt
    plt.figure()
    plt.plot(inputSample, outputSample)
    plt.show()




.. image-sg:: /auto_example/low_level/images/sphx_glr_plot_simulate_001.png
   :alt: plot simulate
   :srcset: /auto_example/low_level/images/sphx_glr_plot_simulate_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.013425733000985929 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.012722849000056158 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.012793359001079807 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.012346110001089983 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.013160504000552464 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.01259539899911033 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.012440918000720558 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.012873044999651029 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.01253323399942019 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.012398781998854247 seconds.




.. GENERATED FROM PYTHON SOURCE LINES 63-66

| The interest of the higher-level functions TODO are:  
| - avoid the *for* loop on the points of the design of experiment,
| - automatic formatting of the simulation outputs.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.240 seconds)


.. _sphx_glr_download_auto_example_low_level_plot_simulate.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_simulate.py <plot_simulate.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_simulate.ipynb <plot_simulate.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
