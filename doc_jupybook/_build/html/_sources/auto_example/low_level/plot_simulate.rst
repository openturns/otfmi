
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_example/low_level/plot_simulate.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_example_low_level_plot_simulate.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_example_low_level_plot_simulate.py:


Simulate an FMU
===============

.. GENERATED FROM PYTHON SOURCE LINES 7-9

The Otfmi ``simulate`` function instanciates, initializes and simulates the
FMU.

.. GENERATED FROM PYTHON SOURCE LINES 11-13

First, retrieve and load the FMU *deviation.fmu*.


.. GENERATED FROM PYTHON SOURCE LINES 13-20

.. code-block:: Python

    import openturns as ot
    import otfmi.example.utility
    import matplotlib.pyplot as plt

    path_fmu = otfmi.example.utility.get_path_fmu("deviation")
    model = otfmi.fmi.load_fmu(path_fmu)








.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. note::
  | *model* is a PyFMI object, loaded with Otfmi’s overlay.
  | As such, ``model.simulate()`` is a pure PyFMI method.
  | Use ``otfmi.fmi.simulate(model)`` to benefit from Otfmi’s overlay.

.. GENERATED FROM PYTHON SOURCE LINES 28-30

Otfmi ``simulate`` function notably eases initializing a FMU, see
:ref:`sphx_glr_auto_example_low_level_plot_initialize.py`.

.. GENERATED FROM PYTHON SOURCE LINES 32-34

On top of the initialization keywords, PyFMI simulation keywords can be
employed:

.. GENERATED FROM PYTHON SOURCE LINES 34-42

.. code-block:: Python

    result = otfmi.fmi.simulate(
        model,
        start_time=0,  # PyFMI keyword
        final_time=1,  # PyFMI keyword
        initialization_parameters=(["L"], [300]),
    )  # Otfmi keyword
    print("y = %g" % result.final("y"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Simulation interval    : 0 - 1.0 seconds.
    Elapsed simulation time: 0.019766949000768363 seconds.
    y = 22.5




.. GENERATED FROM PYTHON SOURCE LINES 43-45

We can use these keyword to plot the deviation Y as function of the beam
length L:

.. GENERATED FROM PYTHON SOURCE LINES 45-58

.. code-block:: Python


    inputSample = ot.RegularGrid(1.0, 10.0, 10).getValues()

    list_output = []
    for length in inputSample:
        result = otfmi.fmi.simulate(model, initialization_parameters=(["L"], [length]))
        list_output.append(result.final("y"))
    outputSample = ot.Sample([[xx] for xx in list_output])

    plt.figure()
    plt.plot(inputSample, outputSample)
    plt.show()




.. image-sg:: /auto_example/low_level/images/sphx_glr_plot_simulate_001.png
   :alt: plot simulate
   :srcset: /auto_example/low_level/images/sphx_glr_plot_simulate_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.011883377010235563 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.012666106020333245 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.011618927004747093 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.010644538007909432 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.010571118007646874 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.010469897999428213 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.011050234024878591 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.01049487802083604 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.010151361988391727 seconds.
    Simulation interval    : 0.0 - 1.0 seconds.
    Elapsed simulation time: 0.009747974982019514 seconds.




.. GENERATED FROM PYTHON SOURCE LINES 59-62

| The interest of the higher-level functions are:
| - avoid the *for* loop on the points of the design of experiment,
| - automatic formatting of the simulation outputs.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.222 seconds)


.. _sphx_glr_download_auto_example_low_level_plot_simulate.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_simulate.ipynb <plot_simulate.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_simulate.py <plot_simulate.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_simulate.zip <plot_simulate.zip>`
